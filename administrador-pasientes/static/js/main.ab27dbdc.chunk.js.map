{"version":3,"sources":["Cita.js","Formulario.js","App.js","index.js"],"names":["Cita","cita","eliminarCita","className","mascota","propietario","fecha","hora","sintomas","onClick","id","prototype","PropTypes","object","isRequired","func","Formulario","crearCita","useState","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","onSubmit","preventDefault","trim","uuid","type","placeholder","onChange","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab27dbdc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Cita = ({cita, eliminarCita}) => {\n    return ( \n        <div className='cita'>\n            <p>Mascota: <span>{cita.mascota}</span></p>\n            <p>Dueño: <span>{cita.propietario}</span></p>\n            <p>Fecha: <span>{cita.fecha}</span></p>\n            <p>Hora: <span>{cita.hora}</span></p>\n            <p>Sintoma: <span>{cita.sintomas}</span></p>\n\n            <button\n               className='button eliminar u-full-width'\n                onClick={ () => eliminarCita(cita.id) }\n            >Eliminar &times;</button>\n        </div>\n     );\n}\n \nCita.prototype = {\n    cita: PropTypes.object.isRequired,\n    eliminarCita: PropTypes.func.isRequired\n}\n\nexport default Cita;","import React, { Fragment, useState } from 'react';\nimport uuid from 'uuid/v4';\nimport PropTypes from 'prop-types';\n\nconst Formulario = ({crearCita}) => {\n\n    const [ cita, actualizarCita ] = useState({\n        mascota: '',\n        propietario: '',\n        fecha: '',\n        hora: '',\n        sintomas: '',\n    })\n    const [ error, actualizarError ] = useState(false)\n\n    const actualizarState= e => {\n        actualizarCita({\n            ...cita,\n            [e.target.name]: e.target.value,\n        })  \n    }\n\n// d extraer valores\n    const { mascota, propietario, fecha, hora, sintomas } = cita\n\n// d enviar cita\n    const submitCita = (e) => {\n        e.preventDefault();\n      // valdiar\n      if(mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '') {\n        actualizarError(true);\n        return;\n      }\n    // d asignar ID\n    cita.id = uuid();\n    \n    // d crear cita\n    crearCita(cita);\n    // d reiniciar el form\n    actualizarCita({\n        mascota: '',\n        propietario: '',\n        fecha: '',\n        hora: '',\n        sintomas: '',\n    })\n    }\n\n\n    return ( \n        <Fragment>\n            <h2>Crear Cita</h2>\n            \n            { error ? <p className='alerta-error'>Todos los campos son obligarios</p> : null }\n            <form\n                onSubmit={ submitCita }\n            >\n                <label>Nombre Mascota</label>\n                <input\n                    type='text'\n                    name='mascota'\n                    className='u-full-width'\n                    placeholder='nombre mascota'\n                    onChange={ actualizarState }\n                    value={ mascota }\n                />\n                <label>Nombre Dueño</label>\n                <input\n                    type='text'\n                    name='propietario'\n                    className='u-full-width'\n                    placeholder='nombre dueño de la mascota'\n                    onChange={ actualizarState }\n                    value={ propietario }\n                />\n                <label>Fecha</label>\n                <input\n                    type='date'\n                    name='fecha'\n                    className='u-full-width'\n                    onChange={ actualizarState }\n                    value={ fecha }\n                />\n                <label>Hora</label>\n                <input\n                    type='time'\n                    name='hora'\n                    className='u-full-width'\n                    onChange={ actualizarState }\n                    value={ hora }\n                />\n                <label>Sintomas</label>\n                <textarea \n                    className='u-full-width'\n                    name='sintomas'   \n                    onChange={ actualizarState } \n                    value={ sintomas }\n                ></textarea>\n\n                <button \n                    type='submit'\n                    className='u-full-width button-primary'\n                >Agregar Cita</button>\n            </form>\n        </Fragment>\n     );\n}\n\nFormulario.propTypes = {\n    crearCita: PropTypes.func.isRequired\n}\n \nexport default Formulario;","import { Fragment, useEffect, useState } from \"react\";\nimport Cita from \"./Cita\";\nimport Formulario from \"./Formulario\";\n\n\nfunction App() {\n\n  // d citas en local storage\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if(!citasIniciales) {\n    citasIniciales = []\n  }\n\n  const [ citas, guardarCitas ] = useState(citasIniciales)\n\n  // d para cuando el state cambie\n  useEffect( () => {\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n    if(citasIniciales) {\n      localStorage.setItem('citas', JSON.stringify(citas))\n    } else {\n      localStorage.setItem('citas', JSON.stringify([]))\n    }\n  },[citas])\n\n  // d coger citas actuales\n  const crearCita = cita => {\n    guardarCitas([\n      ...citas,\n      cita\n    ])\n  }\n\n  // d funcion que elimina cita por su ID\n  const eliminarCita = id => {\n    const nuevasCitas = citas.filter(cita => cita.id !== id )\n    guardarCitas(nuevasCitas)\n  }\n\n  // d mensaje condicional \n  const titulo = citas.length === 0 ? 'No hay citas' : 'Administra tus citas'\n\n  return (\n    <Fragment>\n      <h1>ADMINISTRADOR DE PASIENTES</h1>\n\n      <div className='container'>\n        <div className='row'>\n          <div className='one-half column'>\n            <Formulario \n              crearCita = { crearCita }\n            />\n          </div>\n          \n          <div className='one-half column'>\n            <h2> { titulo } </h2>\n            { citas.map(cita => (\n              <Cita \n                key={ cita.id }\n                cita={ cita }\n                eliminarCita = { eliminarCita }\n              />\n            ))}\n          </div>\n          \n        </div>\n      </div>\n    </Fragment>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}